{"version":3,"file":"youtube.api.service.js","sourceRoot":"","sources":["../src/youtube.api.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAEzD,IAAM,SAAS,GAAG,cAAM,OAAA,MAAM,EAAN,CAAM,CAAC;;;IAU9B;0BALuC,IAAI,YAAY,EAAO;yBAG1C,KAAK;QAGxB,IAAI,CAAC,OAAO,GAAG,SAAS,EAAE,CAAC;KAC3B;IAED,mCAAO,GAAP;QAAA,iBAcC;QAbA,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;YAEpB,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC9D,SAAS,CAAC,IAAI,GAAG,iBAAiB,CAAC;YACnC,SAAS,CAAC,GAAG,GAAG,oCAAoC,CAAC;YACrD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAElD,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,GAAG;gBACzC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;aACzC,CAAC;YAEF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACtB;KACD;;gBA1BD,UAAU;;;;4BAJX;;SAKa,iBAAiB","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\n\nconst getWindow = () => window;\n\n@Injectable()\nexport class YoutubeApiService {\n\n\tpublic apiEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n\tprivate _window: any;\n\tprivate hasLoaded = false; // May want to control this better - eg if api is unloaded and needs to be reinitialised\n\n\tconstructor() {\n\t\tthis._window = getWindow();\n\t}\n\n\tloadApi(): void {\n\t\tif(!this.hasLoaded) {\n\t\t\t// console.log('loadApi')\n\t\t\tlet scriptTag = this._window.document.createElement(\"script\");\n\t\t\tscriptTag.type = \"text/javascript\";\n\t\t\tscriptTag.src = \"https://www.youtube.com/iframe_api\";\n\t\t\tthis._window.document.body.appendChild(scriptTag);\n\t\n\t\t\tthis._window['onYouTubeIframeAPIReady'] = () => {\n\t\t\t\tthis.apiEmitter.emit(this._window[\"YT\"]);\n\t\t\t};\n\t\n\t\t\tthis.hasLoaded = true;\n\t\t}\n\t}\n}\n"]}