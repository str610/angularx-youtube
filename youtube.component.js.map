{"version":3,"file":"youtube.component.js","sourceRoot":"","sources":["../src/youtube.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAiB,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAEzG,OAAO,EAAE,iBAAiB,EAAE,MAAM,uBAAuB,CAAC;AAC1D,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;;IAoB/D,0BACQ,UAA6B,EAC7B,aAAmC,EAClC,QAAmB;QAFpB,eAAU,GAAV,UAAU,CAAmB;QAC7B,kBAAa,GAAb,aAAa,CAAsB;QAClC,aAAQ,GAAR,QAAQ,CAAW;qBATV,IAAI,YAAY,EAAa;sBAC5B,IAAI,YAAY,EAAkB;QAUpD,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;KAC1B;IAED,0CAAe,GAAf;QACC,IAAM,SAAS,GAAG,UAAU,EAC5B,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAA;QACpE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,gBAAgB,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QAE9D,IAAM,MAAM,GAAG;YACd,SAAS,EAAE,SAAS;YACpB,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,GAAG;YACxB,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,GAAG;YAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,EAAE;YACX,OAAO,EAAE;gBACR,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC9B,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;aAChC;SACD,CAAA;QAED,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;KACtC;IAED,kCAAO,GAAP,UAAQ,MAAiB;QACxB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QAEvB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/B;IAED,mCAAQ,GAAR,UAAS,KAAqB;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;;gBAzDD,SAAS,SAAC;oBACV,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,gCAAgC;iBAC1C;;;;gBANQ,iBAAiB;gBACjB,oBAAoB;gBAHqB,SAAS;;;4BAWzD,KAAK;0BACL,KAAK;2BACL,KAAK;6BACL,KAAK;6BACL,KAAK;0BAEL,MAAM;2BACN,MAAM;;2BAlBR;;SASa,gBAAgB","sourcesContent":["import { Component, OnInit, Input, AfterViewInit, Renderer2, Output, EventEmitter } from '@angular/core';\n\nimport { YoutubeApiService } from './youtube.api.service';\nimport { YoutubePlayerService } from './youtube.player.service';\n\n@Component({\n\tselector: 'youtube-component',\n\ttemplate: '<div id=\"playerElement\"></div>'\n})\nexport class YoutubeComponent implements AfterViewInit {\n\n\t@Input() videoId: string;\n\t@Input() width: number | string;\n\t@Input() height: number | string;\n\t@Input() autoplay: boolean;\n\t@Input() controls: boolean;\n\t\n\t@Output() ready = new EventEmitter<YT.Player>();\n\t@Output() change = new EventEmitter<YT.PlayerEvent>();\n\n\tytPlayer: YT.Player;\n\tchangeEvent: YT.PlayerEvent;\n\n\tconstructor(\n\t\tpublic youtubeApi: YoutubeApiService,\n\t\tpublic youtubePlayer: YoutubePlayerService,\n\t\tprivate renderer: Renderer2\n\t) {\n\t\tthis.youtubeApi.loadApi();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst elementId = 'playerId',\n\t\telementContainer = this.renderer.selectRootElement('#playerElement')\n\t\tthis.renderer.setAttribute(elementContainer, 'id', elementId);\n\t\n\t\tconst config = {\n\t\t\telementId: elementId,\n\t\t\twidth: this.width || 300,\n\t\t\theight: this.height || 200,\n\t\t\tautoplay: this.autoplay,\n\t\t\tcontrols: this.controls,\n\t\t\tvideoId: '',\n\t\t\toutputs: {\n\t\t\t\tready: this.onReady.bind(this),\n\t\t\t\tchange: this.onChange.bind(this)\n\t\t\t}\n\t\t}\n\t\n\t\tthis.youtubePlayer.initialise(config);\n\t}\n\n\tonReady(player: YT.Player): void {\n\t\tthis.ytPlayer = player;\n\t\t\n\t\tthis.ytPlayer.loadVideoById(this.videoId);\n\n\t\tthis.ready.emit(this.ytPlayer);\n\t}\n\n\tonChange(event: YT.PlayerEvent): void {\n\t\tthis.change.emit(event);\n\t}\n}\n"]}